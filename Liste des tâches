Afin de mener à bien ce projet de blog, voici la liste de tâches à effectuer:

CONCEPTION

  UML (Unified Modeling Language) - Langage qui permet de modéliser une application à l'aide de différents diagrammes.
    
    Diagramme de contexte : permet d'identifier les utilisateurs de la future application.
    
    Diagramme de packages : permet de rendre visibles les grandes parties de l'application.
    
    Diagramme de cas d'utilisation : permet de définir qui fait quoi : les acteurs sont connectés aux actions qu'il peuvent réaliser
    
    Diagramme de classe : représente chaque classe du programme avec ses attributs et ses méthodes. Le diagramme représente également les liens qui régissent les interactions entre les classes.
    
    Diagramme de séquence : permet de représenter dans le temps comment interagissent les classes pour réaliser un cas d'utilisation.
    
    Modèle Physique de données : Schéma représentant la base de données avec les tables et leurs attributs. 
 
  DESIGN
  
    Wireframe du site : maquette schématique qui définit les zones et composants de chaque page du site.
    
    Implémentation du thème Bootstrap : un thème est un modèle qui permet de mettre en page un site. Il contient le code css qui définit l'aspect visuel des pages. Il est bien évidement possible de le modifier pour couvrir ses besoins.
    
METHODOLOGIE

  GITHUB - outil de versionning et de mise en ligne du code source de l'application en cours de développement. Le code est partagé par les différents contributeurs et archivé de manière à avoir une trace de chaque étape du code.
  
    Créer le repository : c'est le répertoire qui va contenir les différents fichiers de l'application. Le code est uploadé depuis l'ordinateur grâce à la console Git. On peut également récupérer le code en ligne sur l'ordinateur.
    
    Lister les issues : liste des tâches à effectuer (ce document).
    
    Faire des pull requests : consiste à exposer aux contributeurs les modifications qui ont été apporté dans la branche. Après discussions la branche est mergée dans la branche principale.
    
  ORIENTE OBJET - paradigme de programmation qui s'articule autour des objets et de leurs données. Cette architecture permet une bonne organisation du code et facilite les mises à jours.
  
    Les classes : ce sont les modèles qui permettent de créer les objets. Elles contiennent :
      
      Des attributs : les variables de la classe
      
      Des constantes : valeurs qui ne changent jamais
      
      Des méthodes : code qui réalisent des opérations
      
      Un construtor : méthode appelée quand l'objet est créé
      
      Des getters : méthodes qui permettent de récupérer les attributs en dehors de la classe
      
      Des setters : méthodes qui permettent de donner une valeur aux attributs en dehors de la classe
      
      Une méthode hydrate : permet de donner les valeurs des différents attributs
      
    MVC (Modèle Vue Controleur) - manière d'organiser son code en plusieurs fichiers et répertoires
      
      Router : index.php, appelle les fonctions de l’application selon les actions de l’utilisateur
      
      Contrôleur : est appelé par le router pour instancier les objets
      
      Modèle : contient les différentes classe de l'application
      
      Vues : contient les différentes pages du site
      
      Template : contient le structure HTML du site.
      
      ErrorView : affiche les erreurs.
      
      
      
      
	
	  
